@{
    ViewData["Title"] = "Sign Up";
    Layout = "~/Views/Shared/_Layout_Login.cshtml";
}

@section Styles {
    <style>
        body {
            background: #f1f5f9;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            min-height: 100vh;
            color: #334155;
        }

        .signup-container {
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 20px;
        }

        .signup-card {
            width: 100%;
            max-width: 380px;
            border-radius: 16px;
            box-shadow: 0 4px 25px rgba(0, 0, 0, 0.1);
            padding: 30px 25px;
            background: #ffffff;
            border: 1px solid #e2e8f0;
            position: relative;
            overflow: hidden;
        }

            .signup-card::before {
                content: '';
                position: absolute;
                top: 0;
                left: 0;
                right: 0;
                height: 3px;
                background: linear-gradient(90deg, #10b981, #059669);
                border-radius: 16px 16px 0 0;
            }

        .signup-header {
            text-align: center;
            margin-bottom: 25px;
        }

        .logo-icon {
            width: 50px;
            height: 50px;
            background: linear-gradient(135deg, #10b981, #059669);
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            margin: 0 auto 15px;
            color: white;
            font-size: 20px;
            box-shadow: 0 4px 15px rgba(16, 185, 129, 0.3);
        }

        .signup-header h3 {
            font-weight: 700;
            margin-bottom: 5px;
            color: #1e293b;
            font-size: 1.5rem;
        }

        .signup-header p {
            color: #64748b;
            font-size: 0.9rem;
            margin: 0;
        }

        /* Compact Input Group Styling */
        .input-group {
            position: relative;
            margin-bottom: 16px;
        }

        .input-icon {
            position: absolute;
            left: 12px;
            top: 50%;
            transform: translateY(-50%);
            color: #94a3b8;
            font-size: 16px;
            z-index: 2;
            transition: color 0.2s ease;
        }

        .form-control {
            border: 2px solid #e2e8f0;
            border-radius: 10px;
            padding: 12px 12px 12px 40px;
            height: 48px;
            font-size: 15px;
            transition: all 0.2s ease;
            background: #ffffff;
            color: #374151;
            width: 100%;
        }

            .form-control:focus {
                border-color: #10b981;
                box-shadow: 0 0 0 3px rgba(16, 185, 129, 0.1);
                outline: none;
            }

                .form-control:focus + .input-icon {
                    color: #10b981;
                }

            .form-control::placeholder {
                color: #9ca3af;
                font-size: 14px;
            }

        /* Terms & Conditions Checkbox */
        .terms-checkbox {
            display: flex;
            align-items: flex-start;
            gap: 8px;
            margin-bottom: 20px;
            font-size: 13px;
        }

        .form-check-input {
            width: 16px;
            height: 16px;
            border: 2px solid #d1d5db;
            border-radius: 4px;
            margin-top: 2px;
            flex-shrink: 0;
        }

            .form-check-input:checked {
                background-color: #10b981;
                border-color: #10b981;
            }

        .form-check-label {
            color: #64748b;
            font-weight: 500;
            margin: 0;
            line-height: 1.4;
        }

            .form-check-label a {
                color: #10b981;
                text-decoration: none;
                font-weight: 600;
            }

                .form-check-label a:hover {
                    text-decoration: underline;
                }

        /* Compact Sign Up Button */
        .btn-signup {
            width: 100%;
            border-radius: 10px;
            padding: 12px 20px;
            font-weight: 600;
            font-size: 15px;
            background: linear-gradient(135deg, #10b981, #059669);
            border: none;
            color: white;
            transition: all 0.2s ease;
            position: relative;
            overflow: hidden;
            margin-bottom: 20px;
        }

            .btn-signup:hover {
                transform: translateY(-1px);
                box-shadow: 0 6px 20px rgba(16, 185, 129, 0.3);
            }

            .btn-signup:active {
                transform: translateY(0);
            }

        /* Footer */
        .signup-footer {
            text-align: center;
            padding-top: 15px;
            border-top: 1px solid #f1f5f9;
        }

            .signup-footer small {
                color: #64748b;
                font-size: 13px;
            }

            .signup-footer a {
                color: #10b981;
                text-decoration: none;
                font-weight: 600;
            }

                .signup-footer a:hover {
                    text-decoration: underline;
                }

        /* Error Alert */
        .alert-danger {
            border-radius: 8px;
            border: 1px solid #fca5a5;
            background: #fef2f2;
            color: #dc2626;
            padding: 10px 12px;
            margin-bottom: 16px;
            font-size: 14px;
            display: flex;
            align-items: center;
            gap: 8px;
        }

        /* Success Alert */
        .alert-success {
            border-radius: 8px;
            border: 1px solid #86efac;
            background: #f0fdf4;
            color: #166534;
            padding: 10px 12px;
            margin-bottom: 16px;
            font-size: 14px;
            display: flex;
            align-items: center;
            gap: 8px;
        }

        /* Loading State */
        .btn-signup.loading {
            pointer-events: none;
            opacity: 0.8;
        }

            .btn-signup.loading::after {
                content: '';
                position: absolute;
                width: 16px;
                height: 16px;
                top: 50%;
                left: 50%;
                margin-left: -8px;
                margin-top: -8px;
                border: 2px solid transparent;
                border-top: 2px solid #ffffff;
                border-radius: 50%;
                animation: spin 1s linear infinite;
            }

        /* Password Strength Indicator */
        .password-strength {
            margin-top: 5px;
            height: 3px;
            border-radius: 2px;
            background: #e2e8f0;
            overflow: hidden;
            margin-bottom: 10px;
        }

        .password-strength-bar {
            height: 100%;
            transition: all 0.3s ease;
            border-radius: 2px;
        }

        .strength-weak { background: #ef4444; width: 25%; }
        .strength-fair { background: #f97316; width: 50%; }
        .strength-good { background: #eab308; width: 75%; }
        .strength-strong { background: #10b981; width: 100%; }

        .password-requirements {
            font-size: 12px;
            color: #64748b;
            margin-bottom: 10px;
            display: none;
        }

        .password-requirements.show {
            display: block;
        }

        .requirement {
            margin-bottom: 2px;
        }

        .requirement.valid {
            color: #10b981;
        }

        .requirement.invalid {
            color: #ef4444;
        }

        @@keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        /* Responsive */
        @@media (max-width: 480px) {
            .signup-card {
                padding: 25px 20px;
                margin: 10px;
                max-width: 340px;
            }

            .signup-header h3 {
                font-size: 1.3rem;
            }
        }
    </style>
}

<div class="signup-container">
    <div class="signup-card">
        <div class="signup-header">
            <div class="logo-icon">
                <i class="fas fa-user-plus"></i>
            </div>
            <h3>Create Account</h3>
            <p>Join us today</p>
        </div>

        <!-- Error message display -->
        @if (TempData["Error"] != null)
        {
            <div class="alert alert-danger" role="alert">
                <i class="fas fa-exclamation-triangle"></i>
                @TempData["Error"]
            </div>
        }

        <!-- Success message display -->
        @if (TempData["Success"] != null)
        {
            <div class="alert alert-success" role="alert">
                <i class="fas fa-check-circle"></i>
                @TempData["Success"]
            </div>
        }

        <form method="post" asp-action="Register" asp-controller="Account" id="signupForm">
            <!-- Username Input with Icon -->
            <div class="input-group">
                <input type="text"
                       class="form-control"
                       id="username"
                       name="Username"
                       placeholder="Enter your username"
                       required />
                <i class="fas fa-user input-icon"></i>
            </div>

            <!-- Email Input with Icon -->
            <div class="input-group">
                <input type="email"
                       class="form-control"
                       id="email"
                       name="Email"
                       placeholder="Enter your email"
                       required />
                <i class="fas fa-envelope input-icon"></i>
            </div>

            <!-- Password Input with Icon -->
            <div class="input-group">
                <input type="password"
                       class="form-control"
                       id="password"
                       name="Password"
                       placeholder="Create a password"
                       required />
                <i class="fas fa-lock input-icon"></i>
            </div>

            <!-- Password Strength Indicator -->
            <div class="password-strength" id="passwordStrength">
                <div class="password-strength-bar" id="passwordStrengthBar"></div>
            </div>

            <!-- Password Requirements -->
            <div class="password-requirements" id="passwordRequirements">
                <div class="requirement" id="lengthReq">• At least 8 characters</div>
                <div class="requirement" id="uppercaseReq">• One uppercase letter</div>
                <div class="requirement" id="lowercaseReq">• One lowercase letter</div>
                <div class="requirement" id="numberReq">• One number</div>
            </div>

            <!-- Confirm Password Input with Icon -->
            <div class="input-group">
                <input type="password"
                       class="form-control"
                       id="confirmPassword"
                       name="ConfirmPassword"
                       placeholder="Confirm your password"
                       required />
                <i class="fas fa-lock input-icon"></i>
            </div>

            <!-- Terms & Conditions Checkbox -->
            <div class="terms-checkbox">
                <input class="form-check-input"
                       type="checkbox"
                       id="agreeTerms"
                       name="AgreeTerms"
                       required />
                <label class="form-check-label" for="agreeTerms">
                    I agree to the <a href="#" target="_blank">Terms & Conditions</a> and <a href="#" target="_blank">Privacy Policy</a>
                </label>
            </div>

            <!-- Sign Up Button -->
            <button type="submit" class="btn btn-signup" id="signupBtn">
                <i class="fas fa-user-plus me-2"></i>
                <span class="btn-text">Create Account</span>
            </button>
        </form>

        <div class="signup-footer">
            <small>Already have an account? <a href="@Url.Action("Login", "User")">Sign in</a></small>
        </div>
    </div>
</div>

@section Scripts {
    <!-- Include Font Awesome for icons -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">

    <script>
        // Password strength checker
        function checkPasswordStrength(password) {
            let strength = 0;
            const requirements = {
                length: password.length >= 8,
                uppercase: /[A-Z]/.test(password),
                lowercase: /[a-z]/.test(password),
                number: /\d/.test(password)
            };

            // Update requirement indicators
            document.getElementById('lengthReq').classList.toggle('valid', requirements.length);
            document.getElementById('lengthReq').classList.toggle('invalid', !requirements.length);
            
            document.getElementById('uppercaseReq').classList.toggle('valid', requirements.uppercase);
            document.getElementById('uppercaseReq').classList.toggle('invalid', !requirements.uppercase);
            
            document.getElementById('lowercaseReq').classList.toggle('valid', requirements.lowercase);
            document.getElementById('lowercaseReq').classList.toggle('invalid', !requirements.lowercase);
            
            document.getElementById('numberReq').classList.toggle('valid', requirements.number);
            document.getElementById('numberReq').classList.toggle('invalid', !requirements.number);

            // Calculate strength
            Object.values(requirements).forEach(req => req && strength++);

            // Update strength bar
            const strengthBar = document.getElementById('passwordStrengthBar');
            strengthBar.className = 'password-strength-bar';

            switch(strength) {
                case 1:
                    strengthBar.classList.add('strength-weak');
                    break;
                case 2:
                    strengthBar.classList.add('strength-fair');
                    break;
                case 3:
                    strengthBar.classList.add('strength-good');
                    break;
                case 4:
                    strengthBar.classList.add('strength-strong');
                    break;
            }

            return strength >= 3;
        }

        // Password input event listener
        document.getElementById('password').addEventListener('input', function() {
            const password = this.value;
            const requirements = document.getElementById('passwordRequirements');
            
            if (password.length > 0) {
                requirements.classList.add('show');
                checkPasswordStrength(password);
            } else {
                requirements.classList.remove('show');
            }
        });

        // Confirm password validation
        document.getElementById('confirmPassword').addEventListener('input', function() {
            const password = document.getElementById('password').value;
            const confirmPassword = this.value;
            
            if (confirmPassword.length > 0) {
                if (password === confirmPassword) {
                    this.style.borderColor = '#10b981';
                } else {
                    this.style.borderColor = '#ef4444';
                }
            } else {
                this.style.borderColor = '#e2e8f0';
            }
        });

        // Form validation
        function validateForm() {
            const username = document.getElementById('username').value.trim();
            const email = document.getElementById('email').value.trim();
            const password = document.getElementById('password').value;
            const confirmPassword = document.getElementById('confirmPassword').value;
            const agreeTerms = document.getElementById('agreeTerms').checked;

            // Check if all fields are filled
            if (!username || !email || !password || !confirmPassword) {
                alert('Please fill in all fields.');
                return false;
            }

            // Check password strength
            if (!checkPasswordStrength(password)) {
                alert('Password does not meet the minimum requirements.');
                return false;
            }

            // Check password confirmation
            if (password !== confirmPassword) {
                alert('Passwords do not match.');
                return false;
            }

            // Check terms agreement
            if (!agreeTerms) {
                alert('Please agree to the Terms & Conditions.');
                return false;
            }

            // Check email format
            const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
            if (!emailRegex.test(email)) {
                alert('Please enter a valid email address.');
                return false;
            }

            return true;
        }

        // Form submission with loading state
        document.getElementById('signupForm').addEventListener('submit', function(e) {
            if (!validateForm()) {
                e.preventDefault();
                return;
            }

            const signupBtn = document.getElementById('signupBtn');
            const btnText = signupBtn.querySelector('.btn-text');

            signupBtn.classList.add('loading');
            btnText.textContent = 'Creating account...';
            signupBtn.disabled = true;
        });

        // Show error/success alerts
        @if (TempData["Error"] != null)
        {
            <text>
                if (typeof Swal !== 'undefined') {
                    Swal.fire({
                        icon: 'error',
                        title: 'Registration Failed',
                        text: '@TempData["Error"]',
                        confirmButtonColor: '#10b981'
                    });
                }
            </text>
        }

        @if (TempData["Success"] != null)
        {
            <text>
                if (typeof Swal !== 'undefined') {
                    Swal.fire({
                        icon: 'success',
                        title: 'Account Created!',
                        text: '@TempData["Success"]',
                        confirmButtonColor: '#10b981'
                    }).then(() => {
                        window.location.href = '@Url.Action("Login", "User")';
                    });
                }
            </text>
        }

        // Enhanced input focus effects
        document.querySelectorAll('.form-control').forEach(input => {
            input.addEventListener('focus', function() {
                this.parentElement.classList.add('focused');
            });

            input.addEventListener('blur', function() {
                this.parentElement.classList.remove('focused');
            });
        });

        // Username validation (no spaces, special characters)
        document.getElementById('username').addEventListener('input', function() {
            const username = this.value;
            const validUsername = /^[a-zA-Z0-9_]+$/;
            
            if (username.length > 0 && !validUsername.test(username)) {
                this.style.borderColor = '#ef4444';
            } else {
                this.style.borderColor = '#e2e8f0';
            }
        });
    </script>
}